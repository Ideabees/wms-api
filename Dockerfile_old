# Use the official Golang image to create a build artifact
FROM golang:latest AS builder

# Set the working directory inside the container
WORKDIR /app

# Copy go.mod and go.sum files
COPY ./wms-app/go.mod ./wms-app/go.sum ./

# Download dependencies
RUN go mod download

# Copy the entire project
COPY ./wms-app .

# Build the application
RUN go build -o wms-app ./cmd

# Use a minimal base image for the final container
FROM alpine:latest
RUN apk --no-cache add ca-certificates

# Set the working directory inside the container
WORKDIR /root/

# Copy the compiled binary from the builder
COPY --from=builder /app/wms-app .

# Expose the application port
EXPOSE 8080

# Command to run the application
CMD ["./wms-app"]
